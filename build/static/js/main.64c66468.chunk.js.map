{"version":3,"sources":["components/Breadcrums.js","components/Header.js","components/Search.js","components/Item.js","components/ItemList.js","components/ItemDescription.js","Workspace.js","App.js","reportWebVitals.js","index.js"],"names":["Breadcrums","state","className","onClick","props","setSelectedItem","undefined","this","selectedItem","model","React","Component","style","animation","animations","popIn","Header","beautify","TextField","onChange","evt","handleOnSearch","target","value","InputProps","endAdornment","InputAdornment","IconButton","Tooltip","title","Button","setBeautify","fontSize","Badge","color","badgeContent","cart","Search","action","method","type","id","placeholder","name","handleOnChange","Item","item","brand","src","imgUrl","alt","price","fadeInUp","ItemList","generateGrid","items","preapredItems","searchText","length","filter","toLowerCase","includes","i","map","push","Math","random","rows","ret","slice","generateBeautyGrid","styles","media","height","paddingTop","objectFit","Card","sx","width","CardActionArea","CardMedia","component","image","CardContent","Typography","gutterBottom","variant","localStorage","getItem","JSON","parse","dataShouldRefresh","fetch","then","response","json","data","setState","setItem","stringify","setDataShouldRefresh","ItemDescription","addItem","mode","cache","credentials","headers","redirect","referrerPolicy","body","colorCode","selectedColor","storageCode","selectedMemory","setCart","count","onClickcolor","colorIndex","onClickMemory","memoryIndex","generatePrettyData","Object","keys","infoToList","info","ListItem","ListItemText","primary","text","secondary","generateData","word","subText","generateRandomWord","console","log","world","setTimeout","floor","element","cloneElement","key","animationOut","animationIn","List","internalMemory","memory","index","colors","backgroundColor","Workspace","componentDidUpdate","lastDate","Date","should","position","params","particles","line_linked","number","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64c66468.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Breadcrums extends React.Component {\n    constructor() {\n      super();\n      this.state = {};\n    }\n    render() {\n      return (\n        <div className=\"breadcrums-container\">\n            <div onClick={() => this.props.setSelectedItem(undefined)}>\n                Home\n            </div>\n            {this.props.selectedItem?.model && <div>\n                /{this.props.selectedItem?.model}\n            </div>}\n        </div>\n      )\n    }\n}","import React from 'react';\nimport { Breadcrums } from './Breadcrums'\nimport { animations } from 'react-animation'\nimport Badge from \"@material-ui/core/Badge\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport Button from \"@material-ui/core/Button\";\nimport BrokenImage from \"@material-ui/icons/BrokenImage\";\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst style = {\n  animation: animations.popIn\n}\n\nexport class Header extends React.Component {\n    constructor() {\n      super();\n      this.state = {};\n    }\n    render() {\n      return (\n        ! this.props.beautify \n        ? <header className=\"app-header\" >\n            <div \n              className=\"app-header-text\"\n              onClick={(() => this.props.setSelectedItem(undefined))}\n              >\n                HEADER\n            </div>\n            <div>\n              Shopping cart {this.props.cart}\n            </div>\n            <div onClick={() => this.props.setBeautify(true)}>\n              Beautify\n            </div>\n            <Breadcrums setSelectedItem={this.props.setSelectedItem} selectedItem={this.props.selectedItem}/> \n          </header> \n        : <header className=\"app-header-beauty\" style={ style } onClick={(() => this.props.setSelectedItem(undefined))}>\n            <Breadcrums setSelectedItem={this.props.setSelectedItem} selectedItem={this.props.selectedItem}/> \n            <div \n            className=\"app-header-text\"            \n            >\n            </div>\n              <div className=\"beauty-butttons-container\">\n              <TextField      \n                onChange={(evt) => {this.props.handleOnSearch(evt.target.value)}}          \n                InputProps={{                  \n                  endAdornment: (\n                    <InputAdornment>\n                      <IconButton>\n                        <SearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n              />\n              {/* <Search handleOnChange={this.props.handleOnSearch}/> */}\n              <div>\n              <Tooltip title=\"Uglify\">\n                  <Button\n                  onClick={() => {\n                    this.props.setBeautify(false);\n                  }}\n                >\n                  {\" \"}\n                  <BrokenImage fontSize=\"small\" />\n                </Button>\n              </Tooltip>\n                <Tooltip title=\"Cart\">\n                    <Badge color=\"secondary\" badgeContent={this.props.cart}>\n                      <ShoppingCartIcon />{\" \"}\n                    </Badge>\n                </Tooltip>\n                </div>\n            </div>\n        </header> \n      )\n    }\n}","import React from 'react';\n\nexport class Search extends React.Component {\n    constructor() {\n      super();\n      this.state = {};\n    }\n\n    render() {\n      return (\n        <form action=\"/\" method=\"get\" className=\"App-search\">\n            <input\n                className={\"search-input\"}\n                type=\"text\"\n                id=\"header-search\"\n                placeholder=\"SEARCH\"\n                name=\"s\" \n                onChange={(evt) => {this.props.handleOnChange(evt.target.value)}}\n            />\n        </form>\n      )\n    }\n}","import React from 'react';\n\nexport class Item extends React.Component {\n    constructor() {\n      super();\n      this.state = {};\n    }\n    setSelectedItem = () => {\n        this.props.setSelectedItem(this.props.item)\n    }\n    render() {\n        const item = this.props.item\n        return (\n        <div className={item ? \"App-item\": \"App-item-void\"} onClick={item && this.setSelectedItem }>\n            {item && \n                <>\n                    <div className=\"item-title\">\n                        {item.brand  + \" \" + item.model}\n                    </div>\n                    <div className=\"img-container\">\n                        <img \n                            src={item.imgUrl}\n                            alt=\"product-img\"\n                        />\n                    </div>\n                    <div>\n                        {item.price ? item.price + \"€\" : 'No disponible' }\n                    </div>\n                </>\n            }\n        </div> \n        )\n    }\n}","import React from 'react';\nimport { Search } from './Search'\nimport { Item } from './Item'\nimport { animations } from 'react-animation'\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport { CardActionArea } from '@mui/material';\n\nimport Typography from '@mui/material/Typography';\n\nconst style = {\n    animation: animations.fadeInUp,\n  }\nexport class ItemList extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n          items: localStorage.getItem(\"items\") ? JSON.parse(localStorage.getItem(\"items\")) : []\n      };\n    }\n\n    componentDidMount() {\n        (!this.state.items.length || this.props.dataShouldRefresh) && fetch('https://front-test-api.herokuapp.com/api/product')\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ items: data });\n                localStorage.setItem('items', JSON.stringify(data));\n                this.props.setDataShouldRefresh(false)\n            });\n    }\n\n    generateGrid = (items) =>{\n        let preapredItems = items\n        const searchText = this.props.searchText\n\n        if(this.props.searchText && this.props.searchText.length){\n            preapredItems = items.filter((item) => {\n                return item.brand.toLowerCase().includes(searchText.toLowerCase()) || item.model.toLowerCase().includes(searchText);\n            })\n        }\n        preapredItems = preapredItems.map((item) => <Item item={item} setSelectedItem={this.props.setSelectedItem} key={'item-'+item.model}/>)\n        for(let i = preapredItems.length % 4; i<4; i++){\n            preapredItems.push(<Item key={Math.random()}/>)\n        }\n        const rows = preapredItems.length / 4; \n        const ret = []\n        for(let i = 0; i <rows; i++){\n            ret.push(\n                <div className='body-row' key={'row-' + i}>\n                    {preapredItems.slice(i*4, (i*4+4))}\n                </div>\n            )\n        }\n        return ret;\n\n    }\n\n    generateBeautyGrid = (items) =>{\n        let preapredItems = items\n        const searchText = this.props.searchText\n        const styles = {\n            media: {\n                height: '15vh',\n                paddingTop: '5%', // 16:9,\n                objectFit: 'contain'\n                // marginTop:'30'\n            }\n        };\n\n        if(this.props.searchText && this.props.searchText.length){\n            preapredItems = items.filter((item) => {\n                return item.brand.toLowerCase().includes(searchText.toLowerCase()) || item.model.toLowerCase().includes(searchText);\n            })\n        }\n        preapredItems = preapredItems.map((item) => <Card sx={{ width: '22%' }}>\n        <CardActionArea onClick={ ()=> this.props.setSelectedItem(item)}>\n          <CardMedia\n            component=\"img\"\n            height=\"14\"\n            style={styles.media}\n            image={item.imgUrl}\n            alt=\"green iguana\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {item.brand  + \" \" + item.model}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n            {item.price ? item.price + \"€\" : 'No disponible' }\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n        );\n        for(let i = preapredItems.length % 4; i<4; i++){\n            preapredItems.push(<Item key={Math.random()}/>)\n        }\n        const rows = preapredItems.length / 4; \n        const ret = []\n        for(let i = 0; i <rows; i++){\n            ret.push(\n                <div className='body-row' key={'row-' + i} >\n                    {preapredItems.slice(i*4, (i*4+4))}\n                </div>\n            )\n        }\n        return ret;\n\n    }\n    \n    render() {\n      return (\n        !this.props.beautify \n            ? <div className=\"app-body\">\n                    <header>\n                        <Search handleOnChange={this.props.handleOnSearch}/>\n                    </header>\n                <div className=\"body-container\">\n                    {this.generateGrid(this.state.items)}\n                </div>\n            </div> \n            : <div className=\"app-body-beauty\" style={ style }>\n                <div className=\"body-container\">\n                    {this.generateBeautyGrid(this.state.items)}\n                </div>\n            </div> \n      )\n    }\n}","import React from 'react';\nimport { animations, AnimateOnChange, } from 'react-animation'\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Button from '@mui/material/Button';\n\n\n\n\nconst style = {\n    animation: animations.popIn\n  }\n\nexport class ItemDescription extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n          selectedItem: {},\n          selectedColor: 0,\n          selectedMemory: 0, \n          word: 'display',\n          infoToList: {\n            'battery': {\n                text: 'Batery',\n                subText:''\n            },\n            'brand': {\n                text: 'Brand',\n                subText:''\n            },\n            'cpu': {\n                text: 'CPU',\n                subText:''\n            },\n            'dimentions': {\n                text: 'Dimensions',\n                subText:''\n            },\n            'displayResolution': {\n                text: 'Display',\n                subText:''\n            },\n            'model': {\n                text: 'Model',\n                subText:''\n            },\n            'os': {\n                text: 'OS',\n                subText:''\n            },\n            'price': {\n                text: 'Price',\n                subText:' €'\n            },\n            'ram': {\n                text: 'RAM',\n                subText:''\n            },\n            'primaryCamera': {\n                text: 'Camera',\n                subText:''\n            },\n            'weight': {\n                text: 'Weight',\n                subText:''\n            },\n        }\n      };\n      this.generateRandomWord();\n    }\n\n    componentDidMount() {\n        fetch('https://front-test-api.herokuapp.com/api/product/' + this.props.selectedItem.id)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({ selectedItem: data });\n                console.log(data)\n            });\n    }\n\n    generateRandomWord (world){\n        setTimeout(() => {\n            let world = Object.keys(this.state.infoToList)[Math.floor(Math.random() * Object.keys(this.state.infoToList).length)]\n            while(!world || world.length < 1){\n                world = Object.keys(this.state.infoToList)[Math.floor(Math.random() * Object.keys(this.state.infoToList).length)]\n            }\n            this.setState({world})\n            this.generateRandomWord();\n        }, 2000);\n    }\n\n    generate(element) {\n        return [0, 1, 2].map((value) =>\n          React.cloneElement(element, {\n            key: value,\n          }),\n        );\n      }\n    \n\n    addItem = () => {\n        //The response always return 1\n        const response = fetch('https://front-test-api.herokuapp.com/api/cart', {\n            method: 'POST', \n            mode: 'cors', \n            cache: 'no-cache',\n            credentials: 'same-origin', \n            headers: {\n            'Content-Type': 'application/json'\n            },\n            redirect: 'follow', \n            referrerPolicy: 'no-referrer', \n            body: JSON.stringify({\n                id: this.props.selectedItem.id,\n                colorCode: this.state.selectedColor + 1,\n                storageCode: this.state.selectedMemory + 1,\n   \n            }) \n        }).then(response => response.json());\n        response.then((data) => {\n            this.props.setCart(data.count)\n        })\n          \n    }\n\n    onClickcolor = (colorIndex) => {\n        this.setState({selectedColor: colorIndex})\n    }\n\n    onClickMemory = (memoryIndex) => {\n        this.setState({selectedMemory: memoryIndex})\n    }\n\n    generatePrettyData = (item) => {\n        return Object.keys(this.state.infoToList).map((info)=>{\n            return item[info]?.length > 1 && <ListItem>\n                <ListItemText\n                    primary={this.state.infoToList[info].text}\n                    secondary={item[info]}\n                />\n                </ListItem>\n            });\n    }\n\n    generateData = (item) => {\n        return Object.keys(this.state.infoToList).map((info)=>{\n            return  item[info]?.length > 1 && <li>{item[info]?.length > 1 ? item[info] : \"No disponible\" }</li>;\n      });      \n    }\n\n   \n    render() {\n      const item = this.state.selectedItem\n      //console.log(this.state.selectedItem)     \n      return (\n        ! this.props.beautify \n            ? <div className=\"item-description-container\">\n                <div className=\"item-column\">\n                    <div className=\"item-img-container\">\n                        <img \n                            src={item.imgUrl}\n                            alt=\"product-img\"\n                        />\n                    </div>\n                </div>           \n                <div className=\"data-container\">\n                    <div className={\"description-container\"}>\n                        <ul>\n                            {this.generateData(item)}\n                        </ul>\n                    </div>\n                    <div className={\"actions-container\"}>\n                        <div className='selectors-row'>\n                            {item.internalMemory?.map((memory, index) => {\n                            return <div \n                                className={index === this.state.selectedMemory \n                                    ? \"memory-button selected-button\"\n                                    : \"memory-button\"\n                                } \n                                onClick={() => this.onClickMemory(index)}\n                                >\n                                    {memory}\n                                </div>  \n                            })}\n                        </div>\n                        <div className='selectors-row'>\n                        {item.colors?.map((color, index) => {\n                            return <div \n                                    className={index === this.state.selectedColor \n                                        ? \"color-button selected-button\"\n                                        : \"color-button\"\n                                    } \n                                    onClick={() => this.onClickcolor(index)}\n                                    style={{backgroundColor: color}}\n                            />      \n                            })}\n                        </div>\n                        <div className='custom-button' onClick={() => { this.addItem()}}>\n                            Add to cart\n                        </div>\n                    </div>\n                </div>\n            </div> \n            : <div className=\"item-description-container-beauty\" style={ style }>\n                <div className=\"item-column\">          \n                    <div className=\"item-img-container-beauty\">\n                        <img \n                            src={item.imgUrl}\n                            alt=\"product-img\"\n                        />                          \n                    </div>\n                    <div className=\"words-container\">\n                    {this.state.infoToList[this.state.world] && <AnimateOnChange\n                            animationOut=\"bounceOut\"\n                            animationIn=\"bounceIn\"\n                            className=\"animated-words\"\n                        >\n                            {this.state.infoToList[this.state.world]?.text + \": \" + item[this.state.world]}\n                        </AnimateOnChange>}\n                    </div>          \n                </div>           \n                <div className=\"data-container\">\n                    <div className={\"description-container-beauty\"}>\n                    <List >\n                        {this.generatePrettyData(item)}\n                    </List>\n                    </div>\n                    <div className={\"actions-container-beauty\"}>\n                        <div className='selectors-row'>\n                            {item.internalMemory?.map((memory, index) => {\n                            return <div \n                                className={index === this.state.selectedMemory \n                                    ? \"memory-button beauty selected-button\"\n                                    : \"memory-button beauty\"\n                                } \n                                onClick={() => this.onClickMemory(index)}\n                                >\n                                    {memory}\n                                </div>  \n                            })}\n                        </div>\n                        <div className='selectors-row'>\n                        {item.colors?.map((color, index) => {\n                            return <div \n                                    className={index === this.state.selectedColor \n                                        ? \"color-button-beauty selected-button\"\n                                        : \"color-button-beauty\"\n                                    } \n                                    onClick={() => this.onClickcolor(index)}\n                                    style={{backgroundColor: color}}\n                            />      \n                            })}\n                        </div>\n                        <Button variant=\"contained\" onClick={() => { this.addItem()} }> \n                        Add to cart\n                        </Button>\n                        {/* // <div className='custom-button' onClick={() => { this.addItem()}}>\n                        //     Add to cart\n                        // </div> */}\n                    </div>\n                </div>\n            </div> \n      )\n    }\n}","import React from 'react';\nimport { Header } from './components/Header'\nimport { ItemList } from './components/ItemList'\nimport { ItemDescription } from './components/ItemDescription'\nimport Particles from 'react-particles-js';\n\n// import logo from './logo.svg';\n\n\nexport class Workspace extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        cart: localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : 0,\n\n        beautify: localStorage.getItem(\"beautify\") ? JSON.parse(localStorage.getItem(\"beautify\")) : false,\n      };\n    }\n    componentDidUpdate = () => {\n      let lastDate = localStorage.getItem(\"date\")\n      if(!lastDate){\n        lastDate = new Date() * 1 \n        localStorage.setItem('date', new Date() * 1) \n      }\n      console.log(((new Date() * 1) - lastDate) / 1000)\n      if((((new Date() * 1) - lastDate) / 1000)>3600){\n        this.setDataShouldRefresh(true)\n        localStorage.setItem('date', new Date() * 1) \n      }\n    }\n    setBeautify = (beautify) => {\n      this.setState({beautify})\n      localStorage.setItem('beautify', beautify);\n    }\n    setDataShouldRefresh = (should) => {\n      this.setState({dataShouldRefresh: should})\n    }\n    setSelectedItem = (item) => {\n        this.setState({selectedItem: item })\n    }\n    setCart = (items) => {\n      const cart = items >1 ? items : this.state.cart + 1\n      this.setState({cart})\n      localStorage.setItem('cart', cart);\n    }\n    handleOnSearch = (searchText) => {\n      this.setState({ searchText })\n    }\n\n    render() {\n      return (\n        <div className='workpace-container'>\n          {this.state.beautify && <Particles \n            style={{position: 'absolute'}}\n            params={{\n              particles: {\n                color: {\n                  value: \"#000000\"\n                },\n                line_linked: {\n                  color: {\n                    value: \"#000000\"\n                  }\n                },\n                number: {\n                  value: 100\n                },\n                size: {\n                  value: 3\n                }\n              }\n            }}\n          />}\n          <div>\n              <Header \n                beautify={this.state.beautify} \n                setSelectedItem={this.setSelectedItem} \n                selectedItem={this.state.selectedItem} \n                cart={this.state.cart} \n                setBeautify={this.setBeautify} \n                handleOnSearch={this.handleOnSearch}\n                searchText={this.state.searchText}\n              />\n              {\n                  !this.state.selectedItem \n                      ? <ItemList \n                          beautify={this.state.beautify} \n                          setSelectedItem={this.setSelectedItem} \n                          setDataShouldRefresh={this.setDataShouldRefresh} \n                          dataShouldRefresh={this.state.dataShouldRefresh}\n                          handleOnSearch={this.handleOnSearch}\n                          searchText={this.state.searchText}\n                        />\n                      : <ItemDescription \n                          beautify={this.state.beautify} \n                          setSelectedItem={this.setSelectedItem} \n                          selectedItem={this.state.selectedItem} \n                          setCart={this.setCart}\n                        /> \n              }\n          </div>\n        </div>\n    \n      )\n    }\n}","import './App.css';\nimport {Workspace} from './Workspace'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Workspace/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}